1.每周至少做一个 leetcode 的算法题
2.阅读并点评至少一篇英文技术文章
3.学习至少一个技术技巧
4.分享一篇有观点和思考的技术文章


######A:
贪心、分治、回溯、动态规划
8QUEEN PROBLEM:
 int[] result = new int[8];// 全局或成员变量, 下标表示行, 值表示 queen 存储在哪一列
        public  void cal8queens(int row) { // 调用方式：cal8queens(0);
            if (row == 8) { // 8 个棋子都放置好了，打印结果
                printQueens(result);
                System.out.println();

                return; // 8 行棋子都放好了，已经没法再往下递归了，所以就 return
            }
            for (int column = 0; column < 8; ++column) { // 每一行都有 8 中放法
                if (isOk(row, column)) { // 有些放法不满足要求
                    result[row] = column; // 第 row 行的棋子放到了 column 列
                    cal8queens(row+1); // 考察下一行
                }
            }
        }

        private boolean isOk(int row, int column) {// 判断 row 行 column 列放置是否合适
            int leftup = column - 1, rightup = column + 1;
            for (int i = row-1; i >= 0; --i) { // 逐行往上考察每一行
                if (result[i] == column) return false; // 第 i 行的 column 列有棋子吗？
                if (leftup >= 0) { // 考察左上对角线：第 i 行 leftup 列有棋子吗？
                    if (result[i] == leftup) return false;
                }
                if (rightup < 8) { // 考察右上对角线：第 i 行 rightup 列有棋子吗？
                    if (result[i] == rightup) return false;
                }
                --leftup; ++rightup;
            }
            return true;
        }

        private void printQueens(int[] result) { // 打印出一个二维矩阵
            for (int row = 0; row < 8; ++row) {
                for (int column = 0; column < 8; ++column) {
                    if (result[row] == column) System.out.print("Q ");
                    else System.out.print("* ");
                }
                System.out.println();
            }
            System.out.println();
        }

T15: 这个没用什么算法，暴力求解，时间不符合要求，需要再想一想
    public static List<List<Integer>> threeSum(int[] nums) {

        List<List<Integer>> results = new ArrayList<>();

        Arrays.sort(nums);
        int length = nums.length;
        for (int i = 0; i < length; i++) {
            for (int j = i+1; j < length; j++) {
                for (int k = j+1; k < length; k++) {
                    if(nums[i] + nums[j] + nums[k] == 0)
                    {
                        List<Integer> l = new ArrayList<>();
                        l.add(nums[i]);l.add(nums[j]);l.add(nums[k]);
                        if(! results.contains(l)){
                            results.add(l);
                        }


                    }
                }
            }
        }

        return results;
    }

//这个是一个正确结果
       public static List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> results = new ArrayList<>();
        int length = nums.length;
        if(length < 3 || nums == null) return results;

        Arrays.sort(nums);// asc sort

        for (int i = 0; i < length; i++) {
            if(nums[i] > 0) break;
            if(i > 0 && nums[i] == nums[i-1]) continue;

            int L = i+1;
            int R = length-1;
            while(L < R ){
                int sum  = nums[i] + nums[L] + nums[R];
                if(sum == 0){
                    results.add(Arrays.asList(nums[i], nums[L], nums[R]));
                    while (L < R && nums[L] == nums[L+1]) L++;
                    while (L < R && nums[R] == nums[R-1]) R--;

                    L++;
                    R--;
                }else if(sum > 0){
                    R--;
                }else if(sum < 0){
                    L++;
                }
            }
        }

        return results;
    } 
######R:
学习如逆水行舟，不进则退；
快不会写代码了。。。

######T:
数据库的字段加密
一。CREATE TABLE `gongys` (
	`mobile` VARBINARY(16) NOT NULL,
	`key` VARCHAR(32) NOT NULL
)ENGINE=InnoDB;

#ENCODE()和DECODE()  UNHEX HEX
#$query = "SELECT * FROM users WHERE username='$username' AND DECODE(password, 'abcd') = '$password'";
#AES_ENCRYPT('133366435543',`key`) 加密key可配置

INSERT INTO gongys(`mobile`,`key`) VALUES ( AES_ENCRYPT('133366435543',md5('12332100')), md5('123456'));
select *, AES_DECRYPT(mobile,`key`), length(mobile) from gongys;	
select *, AES_DECRYPT(mobile,md5('12332100')), length(mobile) from gongys;

二。 可以用不同的密码实现对不同数据的访问控制
三。 根据张建同学ERP的实现思路，设计一个数据域，
 	 不同的人有不同数据域，不同的数据域只能访问不同的数据，
        相当于权限管理


######S:
保密数据的保护
https://www.cnblogs.com/guogangj/p/3365614.html